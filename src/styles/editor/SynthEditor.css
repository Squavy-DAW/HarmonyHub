.synth-editor{
    position: relative;
    background-image: url("/src/assets/infinite-background-tile-center-cross.png");
    background-repeat: repeat;
    background-size: 88px;
    image-rendering: pixelated;
    width: 100%;
    height: 100%;
    overflow: hidden;
}

.synth-editor .content {
    display: grid;
    grid-template-rows: 1fr auto;
    grid-template-areas: 'main'
                         'piano';
}

.synth-editor .piano {
    grid-area: piano;
}

.synth-editor .connection-lines {
    grid-area: main;
    width: 100%;
    height: 100%;
}

.synth-editor ul {
    grid-area: main;
    position: relative;
    list-style-type: none;
    padding: 0;
    margin: 0;
}

.synth-editor .audionode{
    color: black;
    position: absolute;
    width: 100px;
    height: 100px;
    left: 50%;
    image-rendering: pixelated;

    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
    image-rendering: pixelated;
    filter: drop-shadow(16px 18px 14px rgba(0, 0, 10, 0.566));

    animation: pattern-drag-begin 1s cubic-bezier(.13,1.3,.1,1) forwards;
    transition: rotate 0.1s ease-out;
    transform-origin: center;
}

.synth-editor .audionode:hover{
    cursor: grab;
}

.synth-editor .audionode[data-grab= "grab"]:hover{
    cursor: grabbing;
}

.synth-editor:has( *[data-grab= "grab"]):hover{
    cursor:grabbing
}

.synth-editor .audionode[data-type= "AudioEndNode"]{
    background-image: url('/src/assets/synth-editor/GenericBox.png');
}

.synth-editor .audionode[data-type= "Oscillator"]{
    background-image: url('/src/assets/synth-editor/oscillator_back.png');
}

.synth-editor .audionode[data-type= "Compressor"]{
    background-image: url('/src/assets/synth-editor/GenericBox.png');
}

.synth-editor .audionode[data-type= "Envelope"]{
    background-color: rgb(248, 157, 157);
    border-color: black;
    border-width: 3px;
    border-style: solid;
}

.synth-editor line{
    stroke-dasharray: 10;
    stroke-linecap: round;
    stroke-dashoffset: 200;
    animation: dashedLine 5s linear infinite;
}
@keyframes dashedLine {
    from{
        stroke-dashoffset: 200;
    }
    to {
      stroke-dashoffset: 0;
    }
  }

.synth-editor .audio-connection-node{
    position: absolute;
    width: 20px;
    height: 20px;
    right: 0px;
    bottom: 0%;
    background-repeat: no-repeat;
    background-size: cover;
    image-rendering: pixelated;
    z-index: 100;
}

.synth-editor .audio-connection-node:hover{
    cursor: default;
}

.synth-editor .audio-connection-node[data-allowed=true]:hover{
    cursor: cell;
}

.synth-editor .audio-connection-node[data-allowed=false]:hover{
    cursor: not-allowed;
}

.synth-editor .audio-connection-node[data-id="in"]{
    background-color: rgb(0, 128, 0);
    border-color: black;
    border-width: 1px;
    border-style: solid;
}

.synth-editor .audio-connection-node[data-id="out"]{
    background-color: rgb(128, 0, 0);
    border-color: black;
    border-width: 1px;
    border-style: solid;
}
.synth-editor .audio-connection-node[data-id="mod"]{
    background-color: rgb(0, 0, 128);
    border-color: black;
    border-width: 1px;
    border-style: solid;
}

.synth-editor .controls{
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    overflow-y: auto;
    padding: 1rem;
    border-image-source: url("/src/assets/audionodes-container.png");
    border-image-slice: 1 fill;
    border-image-repeat: repeat;
    border-image-width: 8px;
}

.synth-editor .knob{
    position: absolute;
    width: 50px;
    height: 50px;
}